#!/bin/sh

HERE=$(dirname $0)
TEMPLATES=$HERE/../templates
PUBKEYFILE="$1"
OPTDISABLELOGIN=1       # set to 1 to get sshd to disable password
OPTUSBSER=0             # set to 1 if using the USB serial port

if [ $# -eq 1 -a -r "$1" -a X"$1" != X"--help" ]; then
    true
else
    echo "usage: $(basename $0) {path-to-pubkey-file}" 1>&2
    exit 1
fi

#### emit the first part of the file.
cat << _EOF_
#!/bin/sh

# generated by $(realpath $0)
# cut/paste this file into a file on the Conduit, and then run it.
_EOF_

cat << '_EOF_'
# safety check
if [ ! -e /etc/mlinux-version ]; then
   echo "Not running on mLinux" >&2
   exit 1
fi

# get the mlinux version...
mlinux_version=$(cat /etc/mlinux-version | sed -n -e '/^mLinux/s/mLinux //p')

if [ -z "$mlinux_version" ]; then
    echo "can't find mlinux version" >&2
    exit 1
fi

# make sure we have .ssh dir
if [ ! -e "${HOME}/.ssh" ]; then
   mkdir -p "${HOME}/.ssh"
   chmod 700 "${HOME}/.ssh"
fi

cat << 'EOF' > "${HOME}/.ssh/authorized_keys"
_EOF_

### insert the authorized keys
cat "$PUBKEYFILE"

### finish the copy and go on 
cat << '_EOF_'
EOF
_EOF_

if [ $OPTDISABLELOGIN -ne 0 ]; then
cat << '_EOF_'
### disable password login
if [ ! -f /etc/ssh/sshd_config.orig ]; then
	cp -p /etc/ssh/sshd_config /etc/ssh/sshd_config.orig
fi
cat << 'EOF' > /etc/ssh/sshd_config
# generated...
Protocol 2
# UsePAM yes
UsePrivilegeSeparation yes
Compression no
ClientAliveInterval 15
ClientAliveCountMax 4
Subsystem       sftp    /usr/lib/openssh/sftp-server
PasswordAuthentication no
UsePAM no
PermitEmptyPasswords no
EOF
_EOF_
fi

cat << '_EOF_'
### set device for DHCP
if [ ! -f /etc/network/interfaces.orig ]; then
	cp -p /etc/network/interfaces /etc/network/interfaces.orig
fi
cat << 'EOF' > /etc/network/interfaces
# Wired interface
auto eth0
iface eth0 inet dhcp 
post-up ifconfig eth0 mtu 1100
EOF
_EOF_

if [ $OPTUSBSER -ne 0 ]; then
cat << '_EOF_'
echo -n 'All set: press enter to enable DHCP: '
read JUNK

/etc/init.d/sshd restart || { echo "failed to restart sshd" 1>&2 ; exit 1; }

ifdown eth0
ifup eth0

sleep 3
echo 'checking ping'
ping -c 4 -n 8.8.8.8

echo '
if ping succeeded, you'\''re ready to proceed by logging in from the
remote test system with ssh. Check the IP address from the ifconfig output
below...
'
ifconfig eth0

exit 0
_EOF_
else
cat << '_EOF_'
# can't stop ssh or start DHCP. Just shut down.
echo -n 'All set: press enter to reboot: '
read JUNK
echo "rebooting..."
init 6
sleep 1
_EOF_
fi

exit 0
